{
	"name": "metadatadriven_pipelline",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "lookup_meta",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 2,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "MySqlSource"
								},
								"sink": {
									"type": "SqlPoolSink",
									"writeBehavior": "Upsert",
									"upsertSettings": {
										"keys": {
											"value": "@array(item().keycolumn)",
											"type": "Expression"
										},
										"interimSchemaName": ""
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "anand-synapse1-WorkspaceDefaultStorage",
										"type": "LinkedServiceReference"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "mysql_foreach",
									"type": "DatasetReference",
									"parameters": {
										"sourcedb": {
											"value": "@item().sourcedb",
											"type": "Expression"
										},
										"sourcetablename": {
											"value": "@item().sourcetable",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ded_pool_sink",
									"type": "DatasetReference",
									"parameters": {
										"desttable": {
											"value": "@item().desttable",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "success_log_table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[InsertAuditLog]",
								"storedProcedureParameters": {
									"DestDb": {
										"value": {
											"value": "@item().destdb",
											"type": "Expression"
										},
										"type": "String"
									},
									"Desttable": {
										"value": {
											"value": "@item().desttable",
											"type": "Expression"
										},
										"type": "String"
									},
									"Pipelineendtime": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Pipelinestarttime": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Rowcount": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"SourceDb": {
										"value": {
											"value": "@item().sourcedb",
											"type": "Expression"
										},
										"type": "String"
									},
									"Sourcetable": {
										"value": {
											"value": "@item().sourcetable",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].status",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ded_poollinkedserviceSP",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "fail_log_table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[InsertAuditLog]",
								"storedProcedureParameters": {
									"DestDb": {
										"value": {
											"value": "@item().destdb",
											"type": "Expression"
										},
										"type": "String"
									},
									"Desttable": {
										"value": {
											"value": "@item().desttable",
											"type": "Expression"
										},
										"type": "String"
									},
									"Pipelineendtime": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Pipelinestarttime": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Rowcount": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"SourceDb": {
										"value": {
											"value": "@item().sourcedb",
											"type": "Expression"
										},
										"type": "String"
									},
									"Sourcetable": {
										"value": {
											"value": "@item().sourcetable",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].status",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ded_poollinkedserviceSP",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-04-20T06:34:25Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}